version: 2.1
jobs:
    test:
        docker:
            - image: jhipster/jhipster:v6.3.0
        steps:
            - checkout
            - setup_remote_docker:
                version: 19.03.13
            - run:
                name: Give Executable Power
                command: 'echo jhipster | sudo -S  chmod +x ./mvnw'
            - run:
                name: Install docker and docker-compose
                command: |
                    echo jhipster | sudo -S apt update
                    echo jhipster | sudo -S apt install -y docker.io
                    echo jhipster | sudo -S curl -Lo /usr/local/bin/docker-compose $(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep "browser_download_url.*docker-compose-Linux" | cut -d ':' -f 2,3 | tr -d \" | tr -d ' ')
                    echo jhipster | sudo -S chmod +x /usr/local/bin/docker-compose
                    docker version
                    docker-compose version
            # Download and cache dependencies
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "pom.xml" }}-{{ checksum "package-lock.json" }}
                    # Perform a Partial Cache Restore (https://circleci.com/docs/2.0/caching/#restoring-cache)
                    - v1-dependencies-
            - run:
                name: Print Java Version
                command: 'java -version'
            - run:
                name: Print Node Version
                command: 'node -v'
            - run:
                name: Print NPM Version
                command: 'npm -v'
            - run:
                name: Install Node Modules
                command: 'npm install'
            - save_cache:
                paths:
                    - node
                    - node_modules
                    - ~/.m2
                key: v1-dependencies-{{ checksum "pom.xml" }}-{{ checksum "package-lock.json" }}
            - run:
                name: Login to dockerhub
                command: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASS
            - run:
                name: Run Front End Tests
                command: yarn run webpack:test
            #- run:
            #    name: Backend/Integration tests
            #    command: ./mvnw clean verify
            #    no_output_timeout: 60m
            - store_test_results:
                path: src/test
            - save_cache:
                paths:
                    - node
                    - node_modules
                    - ~/.m2
                key: v1-dependencies-{{ checksum "pom.xml" }}-{{ checksum "package-lock.json" }}
            
    tag-image-and-deploy:
        
        docker:
            - image: jhipster/jhipster:v6.3.0
        steps:
            - checkout
            - setup_remote_docker:
                version: 19.03.13
            # Download and cache dependencies
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "pom.xml" }}-{{ checksum "package-lock.json" }}
                    # Perform a Partial Cache Restore (https://circleci.com/docs/2.0/caching/#restoring-cache)
                    - v1-dependencies-
            - run:
                name: Give Executable Power
                command: 'echo jhipster | sudo -S chmod +x ./mvnw'
            - run:
                name: Update mvn size
                command:  export MAVEN_OPTS="-Xmx1g"
            - run:
                name: Install docker and docker-compose
                command: |
                    echo jhipster | sudo -S apt update
                    echo jhipster | sudo -S apt install -y docker.io
                    echo jhipster | sudo -S curl -Lo /usr/local/bin/docker-compose $(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep "browser_download_url.*docker-compose-Linux" | cut -d ':' -f 2,3 | tr -d \" | tr -d ' ')
                    echo jhipster | sudo -S chmod +x /usr/local/bin/docker-compose
                    docker version
                    docker-compose version
            - run:
                name: Login to dockerhub
                command: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASS
            # Test deploy flow
            - run:
                name: Build docker image
                command: ./mvnw package -Pprod verify jib:build -Djib.to.image=manuelcorrales/soldimet:${CIRCLE_BRANCH}
                no_output_timeout: 60m
            - save_cache:
                paths:
                    - node
                    - node_modules
                    - ~/.m2
                key: v1-dependencies-{{ checksum "pom.xml" }}-{{ checksum "package-lock.json" }}
            #- run:
            #    name: Tag Built Image
            #    command: docker tag soldimet manuelcorrales/soldimet:${CIRCLE_BRANCH}
            - run:
                name: Push image to dockerhub
                command: docker push manuelcorrales/soldimet:${CIRCLE_BRANCH}
            - run:
                name: Update env file with new tag
                command: echo "TAG=${CIRCLE_BRANCH}" > .env
            - run:
                name: Update Remote Env file
                command: rsync .env root@rectificacionsoldimet.com:~/.env
            - run:
                name: Restart service
                command: ssh root@rectificacionsoldimet.com 'docker-compose -f ~/soldimet/docker-compose.yml up -d'
            
workflows:
  build-and-deploy: 
    jobs:
      - test:
          context:
            - DockerHub
          filters:
              branches:
                  ignore: /rc-.*/
      - tag-image-and-deploy:
          context:
            - DockerHub
          filters:
              branches:
                  only: /rc-.*/
